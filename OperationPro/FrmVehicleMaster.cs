using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.Data.Entity;
using System.IO;

namespace OperationPro
{
    public partial class FrmVehicleMaster : DevExpress.XtraEditors.XtraForm
    {
        public int VehicleID;
        public int editmode;
        Byte[] data;
        public FrmVehicleMaster(int _VehicleID = 0)
        {
            InitializeComponent();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            OperationPro.OperationProEntities dbContext = new OperationPro.OperationProEntities();
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.TBL_Type.Load();
            // This line of code is generated by Data Source Configuration Wizard
            lookuptype.Properties.DataSource = dbContext.TBL_Type.Select(s => new { s.ID, s.Type }).ToList();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            dbContext.TBL_Vehicle.Load();
            // This line of code is generated by Data Source Configuration Wizard
            gridControl1.DataSource = dbContext.TBL_Vehicle.Select(s => new { s.ID, s.plateNo, s.Vehicle, s.TBL_Type.Type, s.Model, s.VehicleExpDate, s.InsuranceExpDate, s.AuthorizationExpDate }).ToList();
            // This line of code is generated by Data Source Configuration Wizard
            // Instantiate a new DBContext
            
            // Call the Load method to get the data for the given DbSet from the database.
            dbContext.TBL_MainMaster.Load();
            // This line of code is generated by Data Source Configuration Wizard
            lookUpEdit1.Properties.DataSource = dbContext.TBL_MainMaster.Select(s => new { s.ID, s.EMPID, s.EmpName, s.IqamaID}).ToList();
            VehicleID = _VehicleID;

        }

        public void LoadGrid()
        {
            // Instantiate a new DBContext
            OperationPro.OperationProEntities dbContext = new OperationPro.OperationProEntities();
            dbContext.TBL_Vehicle.Load();
            // This line of code is generated by Data Source Configuration Wizard
            gridControl1.DataSource = dbContext.TBL_Vehicle.Select(s => new { s.ID, s.plateNo, s.Vehicle, s.TBL_Type.Type, s.Model, s.VehicleExpDate, s.InsuranceExpDate, s.AuthorizationExpDate }).ToList();
          }
        private void FrmVehicleMaster_Load(object sender, EventArgs e)
        {
           if(VehicleID!=0)
            {
                LoadVehicle();
            }

        }

        private  void LoadVehicle()
        {
            try
            {
                
                OperationPro.OperationProEntities opro = new OperationProEntities();
                TBL_Vehicle tb = opro.TBL_Vehicle.Where(s => s.ID == VehicleID).First();

                label2.Text = VehicleID.ToString();
                txtplate.Text = tb.plateNo;
                txtveh.Text = tb.Vehicle;
                txtmodel.Text = tb.Model;
                lookuptype.EditValue = tb.Type;
                txtregdate.EditValue = tb.VehicleExpDate;
                txtinsurdate.EditValue = tb.InsuranceExpDate;
                lookUpEdit1.EditValue = tb.AuthorizationID;
                txtautdate.EditValue = tb.AuthorizationExpDate;

                if (data != null)
                    Array.Clear(data, 0, data.Length);

                if (tb.PDFFile != null)
                {
                    data = tb.PDFFile;
                    pdfViewer1.DetachStreamAfterLoadComplete = true;
                    using (MemoryStream ms = new MemoryStream(data))
                        pdfViewer1.LoadDocument(ms);
                }
                else
                {
                    pdfViewer1.CloseDocument();
                }

            }
            catch (Exception ex)
            {

            }

            editmode = 2;
            barnew.Enabled = false;
            baredit.Enabled = true;
            bardel.Enabled = true;
            baredit.Caption = "Cancel";
            txtplate.Focus();


        }
        
        private void barnew_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            resetByNew();

        }

        public void resetByNew()
        {
            if (editmode == 0)
            {
                editmode = 1;
                label2.Text = "NEW";
                txtplate.Text = "";
                txtveh.Text = "";
                txtmodel.Text = "";
                lookuptype.Text = "";
                baredit.Enabled = false;
                bardel.Enabled = false;
                barnew.Caption = "Cancel";
                txtplate.Focus();
            }
            else
            {
                editmode = 0;
                label2.Text = "ID";
                baredit.Enabled = true;
                bardel.Enabled = true;
                barnew.Caption = "New";
            }

        }

        private void barsave_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (editmode == 1)
            {

                OperationPro.OperationProEntities opro = new OperationProEntities();
                TBL_Vehicle tb = new TBL_Vehicle();
                tb.plateNo = txtplate.Text;
                tb.Vehicle = txtveh.Text;
                tb.Model = txtmodel.Text;
                tb.Type = int.Parse(lookuptype.EditValue.ToString());
                tb.VehicleExpDate = txtregdate.EditValue == null ? (DateTime?)null : DateTime.Parse(txtregdate.EditValue.ToString());
                tb.InsuranceExpDate = txtinsurdate.EditValue == null ? (DateTime?)null : DateTime.Parse(txtinsurdate.EditValue.ToString());
                tb.AuthorizationID = lookUpEdit1.EditValue == null ? 0 : int.Parse(lookUpEdit1.EditValue.ToString());
                tb.AuthorizationExpDate = txtautdate.EditValue == null ? (DateTime?)null : DateTime.Parse(txtautdate.EditValue.ToString());
                tb.PDFFile = data;
                opro.TBL_Vehicle.Add(tb);
                opro.SaveChanges();

                editmode = 0;
                label2.Text = "ID";
                txtplate.Text = "";
                txtveh.Text = "";
                txtmodel.Text = "";
                lookuptype.Text = "";
                lookUpEdit1.Text = "";
                baredit.Enabled = true;
                bardel.Enabled = true;
                barnew.Caption = "New";
                LoadGrid();
            }
            else if (editmode == 2)
            {
                OperationPro.OperationProEntities opro = new OperationProEntities();
                int idvalue = int.Parse(label2.Text);
                TBL_Vehicle tb = opro.TBL_Vehicle.Where(s => s.ID == idvalue).First();
                tb.plateNo = txtplate.Text;
                tb.Vehicle = txtveh.Text;
                tb.Model = txtmodel.Text;
                tb.Type = int.Parse(lookuptype.EditValue.ToString());
                tb.VehicleExpDate = txtregdate.EditValue == null ? (DateTime?)null : DateTime.Parse(txtregdate.EditValue.ToString());
                tb.InsuranceExpDate = txtinsurdate.EditValue == null ? (DateTime?)null : DateTime.Parse(txtinsurdate.EditValue.ToString());
                tb.AuthorizationID = lookUpEdit1.EditValue == null ? 0 : int.Parse(lookUpEdit1.EditValue.ToString());
                tb.AuthorizationExpDate = txtautdate.EditValue == null ? (DateTime?)null : DateTime.Parse(txtautdate.EditValue.ToString());
                tb.PDFFile = data;
                opro.SaveChanges();

                editmode = 0;
                label2.Text = "ID";
                txtplate.Text = "";
                txtveh.Text = "";
                txtmodel.Text = "";
                lookuptype.Text = "";
                lookUpEdit1.Text = "";
                barnew.Enabled = true;
                baredit.Caption = "Edit";
                LoadGrid();
            }


        }

        private void baredit_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
          
            if (editmode == 0)
            {
                try
                {
                    int tRcvrLineID = int.Parse(gridView1.GetFocusedRowCellValue("ID").ToString());
                    OperationPro.OperationProEntities opro = new OperationProEntities();
                    TBL_Vehicle tb = opro.TBL_Vehicle.Where(s => s.ID == tRcvrLineID).First();

                    label2.Text = tRcvrLineID.ToString();
                    txtplate.Text = tb.plateNo;
                    txtveh.Text = tb.Vehicle;
                    txtmodel.Text = tb.Model;
                    lookuptype.EditValue = tb.Type;
                    txtregdate.EditValue = tb.VehicleExpDate;
                    txtinsurdate.EditValue = tb.InsuranceExpDate;
                    lookUpEdit1.EditValue = tb.AuthorizationID;
                    txtautdate.EditValue = tb.AuthorizationExpDate;

                    if (data != null)
                        Array.Clear(data, 0, data.Length);

                    if (tb.PDFFile != null)
                    {
                        data = tb.PDFFile;
                        pdfViewer1.DetachStreamAfterLoadComplete = true;
                        using (MemoryStream ms = new MemoryStream(data))
                            pdfViewer1.LoadDocument(ms);
                    }
                    else
                    {
                        pdfViewer1.CloseDocument();
                    }

                }
                catch(Exception ex)
                {

                }

                editmode = 2;
                barnew.Enabled = false;
                baredit.Enabled = true;
                bardel.Enabled = true;
                baredit.Caption = "Cancel";
                txtplate.Focus();
            }
            else
            {

                editmode = 0;
                label2.Text = "ID";
                txtplate.Text = "";
                txtveh.Text = "";
                txtmodel.Text = "";
                lookuptype.Text = "";
                lookUpEdit1.Text = "";
                barnew.Enabled = true;
                baredit.Caption = "Edit";
            }
        }

        private void baropenpdf_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            var fileContent = string.Empty;
            var filePath = string.Empty;

            openFileDialog1.Filter = "PDF files (*.pdf)|*.pdf|All files (*.*)|*.*";
            openFileDialog1.FilterIndex = 1;
            
            if (openFileDialog1.ShowDialog() == DialogResult.OK)
            {
                //Get the path of specified file
                filePath = openFileDialog1.FileName;

                //Read the contents of the file into a stream
                var fileStream = openFileDialog1.OpenFile();

                // FileStream fStream = new FileStream(fileStream, FileMode.Open, FileAccess.Read)
                BinaryReader br = new BinaryReader(fileStream);
                if (data != null)
                    Array.Clear(data, 0, data.Length);

                 data = br.ReadBytes((int)fileStream.Length);
                br.Close();
                fileStream.Close();
                
                pdfViewer1.DetachStreamAfterLoadComplete = true;
                using (MemoryStream ms = new MemoryStream(data))
                    pdfViewer1.LoadDocument(ms);
            }

        }

        private void bardel_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            if (MessageBox.Show("Do you want to delete the record?", "Delete", MessageBoxButtons.YesNo) == DialogResult.Yes)
            {
                int tRcvrLineID = int.Parse(gridView1.GetFocusedRowCellValue("ID").ToString());
                OperationPro.OperationProEntities opro = new OperationProEntities();
                TBL_Vehicle tb = opro.TBL_Vehicle.Where(s => s.ID == tRcvrLineID).First();
                opro.TBL_Vehicle.Remove(tb);
                opro.SaveChanges();
            }
        }

        private void barclose_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            Close();
        }
    }
}