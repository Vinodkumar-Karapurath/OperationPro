using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Text;
using System.Linq;
using System.Threading.Tasks;
using System.Windows.Forms;
using DevExpress.XtraEditors;
using System.IO;

namespace OperationPro
{
    public partial class FrmStaffNewEdit : DevExpress.XtraEditors.XtraForm
    {
        int editmode;
        int mainId;

        Byte[] dataPhoto;

        Byte[] dataIqama;
        Byte[] dataSAR;
        Byte[] dataPassport;

        public FrmStaffNewEdit(int _editmode, int _MainID = 0)
        {
            InitializeComponent();
            OperationPro.OperationProEntities dbContext = new OperationPro.OperationProEntities();
            // This line of code is generated by Data Source Configuration Wizard
            cmbcomp.Properties.DataSource = dbContext.TBL_Company.Select(s => new { s.ID, s.Company }).ToList();
            cmbjob.Properties.DataSource = dbContext.TBL_JOB.Select(s => new { s.ID, s.JobTitle }).ToList();
            cmbdepart.Properties.DataSource = dbContext.TBL_Department.Select(s => new { s.ID, s.Department }).ToList();
            cmbloc.Properties.DataSource = dbContext.TBL_Location.Select(s => new { s.ID, s.Location }).ToList();


            editmode = _editmode;
            mainId = _MainID;
        }

        public void loadStaffData()
        {
            OperationPro.OperationProEntities opro = new OperationProEntities();
            TBL_MainMaster tb = opro.TBL_MainMaster.Where(s => s.ID == mainId).First();
            TXTID.Text = mainId.ToString();
            txtname.Text = tb.EmpName;
            txtempid.Text = tb.EMPID;
            txttgid.Text = tb.TGID;
            cmbcomp.EditValue = tb.CompanyID;
            cmbjob.EditValue = tb.JobTitle;
            cmbdepart.EditValue = tb.Depart;
            cmbloc.EditValue = tb.Location;
            txtmob.Text = tb.Mobile;
            txtemail.Text = tb.Email;
            txtiqamaid.Text = tb.IqamaID;
            txtiqmadate.EditValue = tb.IqamaExpDate;
            txtsarid.Text = tb.SARID;
            txtsardate.EditValue = tb.SARExpDate;
            txtpassport.Text = tb.Passport;
            txtpassdate.EditValue = tb.PassportExpDate;

            if (dataPhoto != null)
                Array.Clear(dataPhoto, 0, dataPhoto.Length);

            if (tb.Photo != null)
            {
                dataPhoto = tb.Photo;
                pictureBox1.Image = null;
                using (MemoryStream ms = new MemoryStream(dataPhoto))
                    pictureBox1.Image = Image.FromStream(ms);
            }
            else
            {
                pictureBox1.Image = null;
            }

            TBL_PdfFile tbPdf = opro.TBL_PdfFile.Where(s => s.DOCID == 1 && s.MasterID == mainId).First();


            if (tbPdf != null && dataIqama!= null)
                Array.Clear(dataIqama, 0, dataIqama.Length);

            if (tbPdf.PDFFile != null)
            {
                dataIqama = tbPdf.PDFFile;
                pdfViewer1.DetachStreamAfterLoadComplete = true;
                using (MemoryStream ms = new MemoryStream(dataIqama))
                    pdfViewer1.LoadDocument(ms);
            }
            else
            {
                pdfViewer1.CloseDocument();
            }

            chkiqama.Checked = true;

            tbPdf = opro.TBL_PdfFile.Where(s => s.DOCID == 2 && s.MasterID == mainId).First();


            if (tbPdf != null && dataSAR != null)
                Array.Clear(dataSAR, 0, dataSAR.Length);

            if (tbPdf.PDFFile != null)
            {
                dataSAR = tbPdf.PDFFile;
               
            }

            tbPdf = opro.TBL_PdfFile.Where(s => s.DOCID == 3 && s.MasterID == mainId).First();


            if (tbPdf != null && dataPassport != null)
                Array.Clear(dataPassport, 0, dataPassport.Length);

            if (tbPdf.PDFFile != null)
            {
                dataPassport = tbPdf.PDFFile;

            }
        }

        public void resetControl()
        {
            txtname.Text = "";
            txtempid.Text = "";
            txttgid.Text = "";
            cmbcomp.Text = "";
            cmbjob.Text = "";
            cmbdepart.Text = "";
            cmbloc.Text = "";
            txtmob.Text = "";
            txtemail.Text = "";
            txtiqamaid.Text = "";
            txtsarid.Text = "";
            txtpassdate.Text = "";
            pictureBox1.Image = null;
            pdfViewer1.CloseDocument();

        }
        private void barButtonItem1_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            try {
                if (editmode == 1) //add new
                {
                    OperationPro.OperationProEntities opro = new OperationProEntities();
                    TBL_MainMaster tb = new TBL_MainMaster();
                    tb.EmpName = txtname.Text;
                    tb.EMPID = txtempid.Text;
                    tb.TGID = txttgid.Text;
                    tb.CompanyID = int.Parse(cmbcomp.EditValue.ToString());
                    tb.JobTitle = int.Parse(cmbjob.EditValue.ToString());
                    tb.Depart = int.Parse(cmbdepart.EditValue.ToString());
                    tb.Location = int.Parse(cmbloc.EditValue.ToString());
                    tb.Mobile = txtmob.Text;
                    tb.Email = txtemail.Text;
                    tb.IqamaID = txtiqamaid.Text;
                    tb.IqamaExpDate = txtiqmadate.EditValue == null ? (DateTime?)null : DateTime.Parse(txtiqmadate.EditValue.ToString());
                    tb.SARID = txtsarid.Text;
                    tb.SARExpDate = txtsardate.EditValue == null ? (DateTime?)null : DateTime.Parse(txtsardate.EditValue.ToString());
                    tb.Passport = txtpassport.Text;
                    tb.PassportExpDate = txtpassdate.EditValue == null ? (DateTime?)null : DateTime.Parse(txtpassdate.EditValue.ToString());
                    tb.Photo = dataPhoto;
                    opro.TBL_MainMaster.Add(tb);
                    opro.SaveChanges();
                    int empindex = tb.ID;

                    TBL_PdfFile tbPdf = new TBL_PdfFile();
                    tbPdf.DOCID = 1; //iqama
                    tbPdf.MasterID = empindex;
                    tbPdf.PDFFile = dataIqama;
                    opro.TBL_PdfFile.Add(tbPdf);
                    opro.SaveChanges();

                    TBL_PdfFile tbPdfsar = new TBL_PdfFile();
                    tbPdfsar.DOCID = 2; //SAR
                    tbPdfsar.MasterID = empindex;
                    tbPdfsar.PDFFile = dataSAR;
                    opro.TBL_PdfFile.Add(tbPdfsar);
                    opro.SaveChanges();

                    TBL_PdfFile tbPdfPass = new TBL_PdfFile();
                    tbPdfPass.DOCID = 3; //iqama
                    tbPdfPass.MasterID = empindex;
                    tbPdfPass.PDFFile = dataPassport;
                    opro.TBL_PdfFile.Add(tbPdfPass);
                    opro.SaveChanges();

                    editmode = 0;
                    MessageBox.Show("New staff created.");
                    resetControl();


                }
                else if (editmode == 2) //Update
                {
                    OperationPro.OperationProEntities opro = new OperationProEntities();
                    TBL_MainMaster tb = opro.TBL_MainMaster.Where(s => s.ID == mainId).First();
                    tb.EmpName = txtname.Text;
                    tb.EMPID = txtempid.Text;
                    tb.TGID = txttgid.Text;
                    tb.CompanyID = int.Parse(cmbcomp.EditValue.ToString());
                    tb.JobTitle = int.Parse(cmbjob.EditValue.ToString());
                    tb.Depart = int.Parse(cmbdepart.EditValue.ToString());
                    tb.Location = int.Parse(cmbloc.EditValue.ToString());
                    tb.Mobile = txtmob.Text;
                    tb.Email = txtemail.Text;
                    tb.IqamaID = txtiqamaid.Text;
                    tb.IqamaExpDate = txtiqmadate.EditValue == null ? (DateTime?)null : DateTime.Parse(txtiqmadate.EditValue.ToString());
                    tb.SARID = txtsarid.Text;
                    tb.SARExpDate = txtsardate.EditValue == null ? (DateTime?)null : DateTime.Parse(txtsardate.EditValue.ToString());
                    tb.Passport = txtpassport.Text;
                    tb.PassportExpDate = txtpassdate.EditValue == null ? (DateTime?)null : DateTime.Parse(txtpassdate.EditValue.ToString());
                    tb.Photo = dataPhoto;
                    opro.SaveChanges();

                    TBL_PdfFile tbPdf = opro.TBL_PdfFile.Where(s => s.MasterID == mainId && s.DOCID == 1).First();
                    if (tbPdf == null)
                    {
                        tbPdf = new TBL_PdfFile();
                        tbPdf.DOCID = 1; //iqama
                        tbPdf.MasterID = mainId;
                        tbPdf.PDFFile = dataIqama;
                        opro.TBL_PdfFile.Add(tbPdf);
                        opro.SaveChanges();
                    }
                    else
                    {
                        tbPdf.PDFFile = dataIqama;
                        opro.SaveChanges();
                    }

                    tbPdf = opro.TBL_PdfFile.Where(s => s.MasterID == mainId && s.DOCID == 2).First();
                    if (tbPdf == null)
                    {
                        tbPdf = new TBL_PdfFile();
                        tbPdf.DOCID = 2; //SAR
                        tbPdf.MasterID = mainId;
                        tbPdf.PDFFile = dataSAR;
                        opro.TBL_PdfFile.Add(tbPdf);
                        opro.SaveChanges();
                    }
                    else
                    {
                        tbPdf.PDFFile = dataSAR;
                        opro.SaveChanges();
                    }

                    tbPdf = opro.TBL_PdfFile.Where(s => s.MasterID == mainId && s.DOCID == 3).First();
                    if (tbPdf == null)
                    {
                        tbPdf = new TBL_PdfFile();
                        tbPdf.DOCID = 3; //Passport
                        tbPdf.MasterID = mainId;
                        tbPdf.PDFFile = dataPassport;
                        opro.TBL_PdfFile.Add(tbPdf);
                        opro.SaveChanges();
                    }
                    else
                    {
                        tbPdf.PDFFile = dataPassport;
                        opro.SaveChanges();
                    }
                    editmode = 0;
                    MessageBox.Show("Staff Updaed.");
                    resetControl();


                }
            }
            catch(Exception ex)
            {

            }
        }

        private void panelControl1_Paint(object sender, PaintEventArgs e)
        {

        }

        private void btnphoto_Click(object sender, EventArgs e)
        {
            var fileContent = string.Empty;
            var filePath = string.Empty;

            openFileDialog1.Filter = "All files (*.*)|*.*";
            openFileDialog1.FilterIndex = 1;

            if (openFileDialog1.ShowDialog() == DialogResult.OK)
            {
                //Get the path of specified file
                filePath = openFileDialog1.FileName;

                //Read the contents of the file into a stream
                var fileStream = openFileDialog1.OpenFile();

                // FileStream fStream = new FileStream(fileStream, FileMode.Open, FileAccess.Read)
                BinaryReader br = new BinaryReader(fileStream);
                if (dataPhoto != null)
                    Array.Clear(dataPhoto, 0, dataPhoto.Length);

                dataPhoto = br.ReadBytes((int)fileStream.Length);
                br.Close();
                fileStream.Close();

                pictureBox1.Image = null;
                using (MemoryStream ms = new MemoryStream(dataPhoto))
                    pictureBox1.Image = Image.FromStream(ms);
            }
        }

        private void btnpdf_Click(object sender, EventArgs e)
        {
            var fileContent = string.Empty;
            var filePath = string.Empty;

            openFileDialog1.Filter = "PDF files (*.pdf)|*.pdf|All files (*.*)|*.*";
            openFileDialog1.FilterIndex = 1;

            if (openFileDialog1.ShowDialog() == DialogResult.OK)
            {
                //Get the path of specified file
                filePath = openFileDialog1.FileName;

                //Read the contents of the file into a stream
                var fileStream = openFileDialog1.OpenFile();

                if (chkiqama.Checked == true)
                {
                    // FileStream fStream = new FileStream(fileStream, FileMode.Open, FileAccess.Read)
                    BinaryReader br = new BinaryReader(fileStream);
                    if (dataIqama != null)
                        Array.Clear(dataIqama, 0, dataIqama.Length);

                    dataIqama = br.ReadBytes((int)fileStream.Length);
                    br.Close();
                    fileStream.Close();

                    pdfViewer1.DetachStreamAfterLoadComplete = true;
                    using (MemoryStream ms = new MemoryStream(dataIqama))
                        pdfViewer1.LoadDocument(ms);
                }
                else if (chksar.Checked == true)
                {
                    // FileStream fStream = new FileStream(fileStream, FileMode.Open, FileAccess.Read)
                    BinaryReader br = new BinaryReader(fileStream);
                    if (dataSAR != null)
                        Array.Clear(dataSAR, 0, dataSAR.Length);

                    dataSAR = br.ReadBytes((int)fileStream.Length);
                    br.Close();
                    fileStream.Close();

                    pdfViewer1.DetachStreamAfterLoadComplete = true;
                    using (MemoryStream ms = new MemoryStream(dataSAR))
                        pdfViewer1.LoadDocument(ms);

                }
                else if (chkpass.Checked == true)
                {
                    // FileStream fStream = new FileStream(fileStream, FileMode.Open, FileAccess.Read)
                    BinaryReader br = new BinaryReader(fileStream);
                    if (dataPassport != null)
                        Array.Clear(dataPassport, 0, dataPassport.Length);

                    dataPassport = br.ReadBytes((int)fileStream.Length);
                    br.Close();
                    fileStream.Close();

                    pdfViewer1.DetachStreamAfterLoadComplete = true;
                    using (MemoryStream ms = new MemoryStream(dataPassport))
                        pdfViewer1.LoadDocument(ms);

                }

            }

        }

        private void chkiqama_CheckedChanged(object sender, EventArgs e)
        {
            if (chkiqama.Checked == true)
            {
               
                pdfViewer1.DetachStreamAfterLoadComplete = true;
                if (dataIqama != null)
                 using (MemoryStream ms = new MemoryStream(dataIqama))
                    pdfViewer1.LoadDocument(ms);
                else
                    pdfViewer1.CloseDocument();
            }
        }

        private void chksar_CheckedChanged(object sender, EventArgs e)
        {
            if (chksar.Checked == true)
            {

                pdfViewer1.DetachStreamAfterLoadComplete = true;
                if (dataSAR != null)
                    using (MemoryStream ms = new MemoryStream(dataSAR))
                        pdfViewer1.LoadDocument(ms);
                else
                    pdfViewer1.CloseDocument();
            }
        }

        private void chkpass_CheckedChanged(object sender, EventArgs e)
        {
            if (chkpass.Checked == true)
            {

                pdfViewer1.DetachStreamAfterLoadComplete = true;
                if (dataPassport != null)
                    using (MemoryStream ms = new MemoryStream(dataPassport))
                        pdfViewer1.LoadDocument(ms);
                else
                    pdfViewer1.CloseDocument();
            }
        }

        private void barclose_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            Close();
        }

        private void FrmStaffNewEdit_Load(object sender, EventArgs e)
        {
            if (mainId != 0)
                loadStaffData();
        }

        private void barnew_ItemClick(object sender, DevExpress.XtraBars.ItemClickEventArgs e)
        {
            mainId = 0;
            editmode = 1;
            resetControl();
        }
    }
}